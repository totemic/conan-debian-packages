diff --git a/makefile_build/Makefile b/makefile_build/Makefile
index ef7d290..1547cbf 100644
--- a/makefile_build/Makefile
+++ b/makefile_build/Makefile
@@ -10,20 +10,24 @@ BUILDROOT ?= $(MAKEFILE_DIR)/..
 BUILDDIR := $(BUILDROOT)/out
 TOBUILDDIR = $(addprefix $(BUILDDIR)/,$(1))
 MKDIR = if [ ! -d $(dir $@) ]; then mkdir -p $(dir $@); fi
-CC=gcc
-CXX=g++
+CC?=gcc
+CXX?=g++
 FLATC=flatc
 
 LIBEDGETPU_CFLAGS := \
 	-fPIC \
 	-Wall \
-	-std=c99
+	-std=c99 \
+	$(CFLAGS) \
+	$(CPPFLAGS)
 
 LIBEDGETPU_CXXFLAGS := \
 	-fPIC \
 	-Wall \
 	-std=c++14 \
-	-DDARWINN_PORT_DEFAULT
+	-DDARWINN_PORT_DEFAULT \
+    $(CXXFLAGS) \
+    $(CPPFLAGS)
 
 LIBEDGETPU_LDFLAGS := \
 	-Wl,-Map=$(BUILDDIR)/output.map \
@@ -31,6 +35,7 @@ LIBEDGETPU_LDFLAGS := \
 	-Wl,--soname,libedgetpu.so.1 \
 	-Wl,--version-script=$(BUILDROOT)/tflite/public/libedgetpu.lds \
 	-fuse-ld=gold \
+	$(LDFLAGS) \
 	-lflatbuffers \
 	-labsl_flags \
 	-labsl_flags_internal \
@@ -54,14 +59,10 @@ LIBEDGETPU_FW_OUTPUT := $(call TOBUILDDIR, $(BUILDROOT)/driver/usb/usb_latest_fi
 
 LIBEDGETPU_INCLUDES := \
 	$(BUILDROOT) \
-	$(TFROOT) \
 	$(BUILDDIR) \
 	$(BUILDDIR)/$(BUILDROOT)
 LIBEDGETPU_INCLUDES := $(addprefix -I,$(LIBEDGETPU_INCLUDES))
 
-LIBEDGETPU_CSRCS := $(TFROOT)/tensorflow/lite/c/common.c
-LIBEDGETPU_COBJS := $(call TOBUILDDIR,$(patsubst %.c,%.o,$(LIBEDGETPU_CSRCS)))
-
 LIBEDGETPU_CCSRCS := \
 	$(BUILDROOT)/api/allocated_buffer.cc \
 	$(BUILDROOT)/api/buffer.cc \
@@ -139,8 +140,7 @@ LIBEDGETPU_CCSRCS := \
 	$(BUILDROOT)/tflite/custom_op_user_data_direct.cc \
 	$(BUILDROOT)/tflite/edgetpu_c.cc \
 	$(BUILDROOT)/tflite/edgetpu_delegate_for_custom_op.cc \
-	$(BUILDROOT)/tflite/edgetpu_delegate_for_custom_op_tflite_plugin.cc \
-	$(TFROOT)/tensorflow/lite/util.cc
+	$(BUILDROOT)/tflite/edgetpu_delegate_for_custom_op_tflite_plugin.cc
 LIBEDGETPU_CCOBJS := $(call TOBUILDDIR,$(patsubst %.cc,%.o,$(LIBEDGETPU_CCSRCS)))
 
 # In order to support direct and throttled mode - we need to compile two files
@@ -180,12 +180,6 @@ firmware:
 	done
 	@echo "} // namespace" >> $(LIBEDGETPU_FW_OUTPUT)
 
-
-$(LIBEDGETPU_COBJS) : $(BUILDDIR)/%.o: %.c
-	@$(MKDIR)
-	@echo "Compiling $<"
-	@$(CC) $(LIBEDGETPU_CFLAGS) $(LIBEDGETPU_INCLUDES) -c $< -MD -MT $@ -MF $(@:%o=%d) -o $@
-
 $(LIBEDGETPU_CCOBJS) : $(BUILDDIR)/%.o: %.cc
 	@$(MKDIR)
 	@echo "Compiling $<"
@@ -201,14 +195,14 @@ $(LIBEDGETPU_STD_CCOBJS) : $(BUILDDIR)/%-throttled.o: %.cc
 	@echo "Compiling $<"
 	@$(CXX) -DTHROTTLE_EDGE_TPU $(LIBEDGETPU_CXXFLAGS) $(LIBEDGETPU_INCLUDES) -c $< -MD -MT $@ -MF $(@:%o=%d) -o $@
 
-libedgetpu: | firmware $(LIBEDGETPU_FLATC_OBJS) $(LIBEDGETPU_COBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_MAX_CCOBJS)
+libedgetpu: | firmware $(LIBEDGETPU_FLATC_OBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_MAX_CCOBJS)
 	@mkdir -p $(BUILDDIR)/direct/k8
 	@echo "Building libedgetpu.so"
-	@$(CXX) $(LIBEDGETPU_CCFLAGS) $(LIBEDGETPU_LDFLAGS) $(LIBEDGETPU_COBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_MAX_CCOBJS) -o $(BUILDDIR)/direct/k8/libedgetpu.so.1.0
-	@ln -sf $(BUILDDIR)/direct/k8/libedgetpu.so.1.0 $(BUILDDIR)/direct/k8/libedgetpu.so.1
+	@$(CXX) $(LIBEDGETPU_CCFLAGS) $(LIBEDGETPU_LDFLAGS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_MAX_CCOBJS) -o $(BUILDDIR)/direct/k8/libedgetpu.so.1.0
+	@ln -sf libedgetpu.so.1.0 $(BUILDDIR)/direct/k8/libedgetpu.so.1
 
-libedgetpu-throttled: | firmware $(LIBEDGETPU_FLATC_OBJS) $(LIBEDGETPU_COBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_STD_CCOBJS)
+libedgetpu-throttled: | firmware $(LIBEDGETPU_FLATC_OBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_STD_CCOBJS)
 	@mkdir -p $(BUILDDIR)/throttled/k8
 	@echo "Building throttled libedgetpu.so"
-	@$(CXX) $(LIBEDGETPU_CCFLAGS) $(LIBEDGETPU_LDFLAGS) $(LIBEDGETPU_COBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_STD_CCOBJS) -o $(BUILDDIR)/throttled/k8/libedgetpu.so.1.0
-	@ln -sf $(BUILDDIR)/throttled/k8/libedgetpu.so.1.0 $(BUILDDIR)/throttled/k8/libedgetpu.so.1
+	@$(CXX) $(LIBEDGETPU_CCFLAGS) $(LIBEDGETPU_LDFLAGS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_STD_CCOBJS) -o $(BUILDDIR)/throttled/k8/libedgetpu.so.1.0
+	@ln -sf libedgetpu.so.1.0 $(BUILDDIR)/throttled/k8/libedgetpu.so.1
